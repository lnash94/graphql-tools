type Query {
  # Fetch the hero of the Star Wars
  hero(episode: Episode): Character!
  # Returns reviews of the Star Wars
  reviews(episode: Episode! = ""): [Review]!
  # Returns characters by id, or null if character is not found
  characters(idList: [String!]!): [Character]!
  # Returns a human by id, or null if human is not found
  human(id: String!): Human
}

# A mechanical character from the Star Wars universe
interface Character {
  # The unique identifier of the character
  id: String!
  # The name of the character
  name: String!
  # The episodes this character appears in
  appearsIn: [Episode!]!
}

# A humanoid creature from the Star Wars universe
type Human implements Character {
  # The unique identifier of the human
  id: String!
  # The name of the human
  name: String!
  # The home planet of the human, or null if unknown
  homePlanet: String
  # Height in meters, or null if unknown
  height: Float
  # Mass in kilograms, or null if unknown
  mass: Int
  # The episodes this human appears in
  appearsIn: [Episode!]!
}

# Episodes of Starwars Series
enum Episode {
  # The episode jedi
  JEDI
  # The episode empire
  EMPIRE
  # The episode new hope
  NEWHOPE
}

type Review {
  episode: Episode
  stars: Int!
  commentary: String
}

type Mutation {
  # Add new reviews and return the review values
  createReview(episode: Episode!, reviewInput: ReviewInput!): Review!
}

input ReviewInput {
  stars: Int!
  commentary: String!
}
